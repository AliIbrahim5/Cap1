{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALI\\\\OneDrive\\\\Desktop\\\\Cap1\\\\hangman\\\\src\\\\components\\\\Play\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport image from \"../../image/Untitled.png\";\nimport image2 from \"../../image/Untitled2.png\";\nimport image3 from \"../../image/Untitled3.png\";\nimport image4 from \"../../image/Untitled4.png\";\nimport image5 from \"../../image/Untitled5.png\";\nimport image6 from \"../../image/Untitled6.png\";\nimport image7 from \"../../image/Untitled7.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = () => {\n  _s();\n\n  var _location$state;\n\n  const history = useHistory();\n  const location = useLocation();\n  const myCateg = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.myCateg;\n  let words = myCateg;\n  const [word, setword] = useState(words[Math.floor(Math.random() * words.length)]);\n  const [picIndex, setpicIndex] = useState(0);\n  let amges = [image, image2, image3, image4, image5, image6, image7];\n  const [dashes, setDashes] = useState(\"-\".repeat(word.length));\n  const [guesses, setguesses] = useState(5);\n  let letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  let str;\n  useEffect(() => {\n    console.log('should change');\n    document.getElementsByClassName('imagegg').src = image7;\n  }, [setpicIndex]);\n\n  const letterPressed = index => {\n    document.getElementById(`${index}`).disabled = true;\n\n    if (word.includes(letters[index])) {\n      str = dashes.split(\"\");\n      str[word.indexOf(letters[index])] = letters[index];\n      setDashes(str.join(\"\"));\n    } else {\n      setguesses(guesses - 1);\n      setpicIndex(picIndex + 1);\n\n      if (guesses <= 1) {\n        history.push('/lost');\n      }\n    }\n  };\n\n  const [seconds, setSeconds] = useState(30);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (seconds <= 0) {\n    history.push('/lost');\n  }\n\n  if (!dashes.includes(\"-\")) {\n    setTimeout(() => {\n      history.push('/won');\n    }, 500);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"play\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Guesses left: \", guesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"time: \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"letters\",\n          children: letters.map((letter, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"letter\",\n                id: `${index}`,\n                onClick: () => letterPressed(index),\n                children: letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"guess\",\n          children: dashes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: amges[0],\n          className: \"imagegg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"C/kqsUNimiBlGQUCkYWD6WUJ2D4=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["C:/Users/ALI/OneDrive/Desktop/Cap1/hangman/src/components/Play/index.js"],"names":["React","useState","useEffect","useHistory","useLocation","image","image2","image3","image4","image5","image6","image7","Play","history","location","myCateg","state","words","word","setword","Math","floor","random","length","picIndex","setpicIndex","amges","dashes","setDashes","repeat","guesses","setguesses","letters","str","console","log","document","getElementsByClassName","src","letterPressed","index","getElementById","disabled","includes","split","indexOf","join","push","seconds","setSeconds","interval","setInterval","clearInterval","setTimeout","map","letter"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router\";\r\nimport image from \"../../image/Untitled.png\"\r\nimport image2 from \"../../image/Untitled2.png\"\r\nimport image3 from \"../../image/Untitled3.png\"\r\nimport image4 from \"../../image/Untitled4.png\"\r\nimport image5 from \"../../image/Untitled5.png\"\r\nimport image6 from \"../../image/Untitled6.png\"\r\nimport image7 from \"../../image/Untitled7.png\"\r\n\r\nconst Play = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const myCateg =location.state?.myCateg;\r\n  let words = myCateg;\r\n  const [word, setword] = useState(\r\n    words[Math.floor(Math.random() * words.length)]\r\n  );\r\n    const [picIndex, setpicIndex] = useState(0)\r\n  let amges =[image,image2,image3,image4,image5,image6,image7]\r\n  \r\n  const [dashes, setDashes] = useState(\"-\".repeat(word.length));\r\n  const [guesses, setguesses] = useState(5);\r\n  let letters = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n  let str;\r\n  useEffect(() => {\r\n    console.log('should change');\r\n    document.getElementsByClassName('imagegg').src=image7;\r\n  }, [setpicIndex])\r\n  const letterPressed = (index) => {\r\n    document.getElementById(`${index}`).disabled = true;\r\n    if (word.includes(letters[index])) {\r\n      str = dashes.split(\"\");\r\n      str[word.indexOf(letters[index])] = letters[index];\r\n      setDashes(str.join(\"\"));\r\n    } else {\r\n      setguesses(guesses - 1);\r\n      setpicIndex(picIndex+1)\r\n\r\n      if (guesses <= 1) {\r\n        history.push('/lost');\r\n      }\r\n    }\r\n  };\r\n\r\n  const [seconds, setSeconds] = useState(30);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds((seconds) => seconds - 1);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n   \r\n  if (seconds <= 0) {\r\n    history.push('/lost');\r\n  }\r\n\r\n  if(!dashes.includes(\"-\")){\r\n      setTimeout(() => {\r\n          history.push('/won');\r\n      }, 500);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"home\">\r\n        <div class=\"play\">\r\n          <h4>Guesses left: {guesses}</h4>\r\n          <p>time: {seconds}</p>\r\n          <div class=\"letters\">\r\n            {letters.map((letter, index) => {\r\n              return (\r\n                <>\r\n                  <button\r\n                    className=\"letter\"\r\n                    id={`${index}`}\r\n                    onClick={() => letterPressed(index)}\r\n                  >\r\n                    {letter}\r\n                  </button>\r\n                </>\r\n              );\r\n            })}\r\n          </div>\r\n          <p className=\"guess\">{dashes}</p>\r\n          <img  src={amges[0]} className=\"imagegg\" />\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Play;\r\n"]},"metadata":{},"sourceType":"module"}