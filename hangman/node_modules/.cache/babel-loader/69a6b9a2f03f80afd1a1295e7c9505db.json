{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALI\\\\OneDrive\\\\Desktop\\\\Cap1\\\\hangman\\\\src\\\\components\\\\Play\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport image from \"../../image/Untitled.png\";\nimport image2 from \"../../image/Untitled2.png\";\nimport image3 from \"../../image/Untitled3.png\";\nimport image4 from \"../../image/Untitled4.png\";\nimport image5 from \"../../image/Untitled5.png\";\nimport image6 from \"../../image/Untitled6.png\";\nimport image7 from \"../../image/Untitled7.png\";\nimport correctSound from \"../../image/correct.wav\";\nimport incorrectSound from \"../../image/incorrect.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = () => {\n  _s();\n\n  var _location$state;\n\n  const history = useHistory();\n  const location = useLocation();\n  const myCateg = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.myCateg;\n  let words = myCateg;\n  const [word] = useState(words[Math.floor(Math.random() * words.length)]);\n  const [picIndex, setpicIndex] = useState(0);\n  let amges = [image, image2, image3, image4, image5, image6, image7];\n  const [dashes, setDashes] = useState(\"-\".repeat(word.length));\n  const [guesses, setguesses] = useState(7);\n  let letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n  let str;\n  let correctSounds = document.getElementById(\"CorrectAudio\");\n  let wrongSounds = document.getElementById(\"IncorrectAudio\");\n  useEffect(() => {}, [setpicIndex]);\n\n  const letterPressed = index => {\n    document.getElementById(`${index}`).style.visibility = \"hidden\";\n\n    if (word.includes(letters[index])) {\n      window.onload = () => {\n        correctSounds.play();\n      };\n\n      str = dashes.split(\"\");\n      str[word.indexOf(letters[index])] = letters[index];\n      setDashes(str.join(\"\"));\n    } else {\n      window.onload = () => {\n        wrongSounds.play();\n      };\n\n      setguesses(guesses - 1);\n      setpicIndex(picIndex + 1);\n    }\n  };\n\n  const [seconds, setSeconds] = useState(550);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (seconds <= 0 || guesses <= 1) {\n    setTimeout(() => {\n      history.push(\"/lost\");\n    }, 500);\n  }\n\n  if (!dashes.includes(\"-\")) {\n    setTimeout(() => {\n      history.push(\"/won\");\n    }, 500);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"CorrectAudio\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: correctSound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"IncorrectAudio\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: incorrectSound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nameGameB\",\n        children: \"H\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nameGameR\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nameGameB\",\n        children: \"NGM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nameGameR\",\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nameGameB\",\n        children: \"N\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homePlay \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Guesses left: \", guesses - 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Time: \", seconds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letters\",\n          children: letters.map((letter, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"letter\",\n                id: `${index}`,\n                onClick: () => letterPressed(index),\n                children: letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"guess\",\n            children: dashes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: amges[picIndex],\n            className: \"imagegg\",\n            alt: \"hangman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Play, \"+E1HAvK37etevqOqd959UXmNtGk=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["C:/Users/ALI/OneDrive/Desktop/Cap1/hangman/src/components/Play/index.js"],"names":["React","useState","useEffect","useHistory","useLocation","image","image2","image3","image4","image5","image6","image7","correctSound","incorrectSound","Play","history","location","myCateg","state","words","word","Math","floor","random","length","picIndex","setpicIndex","amges","dashes","setDashes","repeat","guesses","setguesses","letters","str","correctSounds","document","getElementById","wrongSounds","letterPressed","index","style","visibility","includes","window","onload","play","split","indexOf","join","seconds","setSeconds","interval","setInterval","clearInterval","setTimeout","push","map","letter"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport \"./style.css\";\nimport { useHistory } from \"react-router\";\nimport { useLocation } from \"react-router\";\nimport image from \"../../image/Untitled.png\";\nimport image2 from \"../../image/Untitled2.png\";\nimport image3 from \"../../image/Untitled3.png\";\nimport image4 from \"../../image/Untitled4.png\";\nimport image5 from \"../../image/Untitled5.png\";\nimport image6 from \"../../image/Untitled6.png\";\nimport image7 from \"../../image/Untitled7.png\";\nimport correctSound from \"../../image/correct.wav\";\nimport incorrectSound from \"../../image/incorrect.mp3\";\n\nconst Play = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const myCateg = location.state?.myCateg;\n  let words = myCateg;\n  const [word] = useState(words[Math.floor(Math.random() * words.length)]);\n  const [picIndex, setpicIndex] = useState(0);\n  let amges = [image, image2, image3, image4, image5, image6, image7];\n\n  const [dashes, setDashes] = useState(\"-\".repeat(word.length));\n  const [guesses, setguesses] = useState(7);\n  let letters = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n  let str;\n  let correctSounds = document.getElementById(\"CorrectAudio\");\n  let wrongSounds = document.getElementById(\"IncorrectAudio\");\n\n  useEffect(() => {}, [setpicIndex]);\n  const letterPressed = (index) => {\n    document.getElementById(`${index}`).style.visibility = \"hidden\";\n    if (word.includes(letters[index])) {\n      window.onload = () => {\n        correctSounds.play();\n      };\n      str = dashes.split(\"\");\n      str[word.indexOf(letters[index])] = letters[index];\n      setDashes(str.join(\"\"));\n    } else {\n      window.onload = () => {\n        wrongSounds.play();\n      };\n      setguesses(guesses - 1);\n      setpicIndex(picIndex + 1);\n    }\n  };\n\n  const [seconds, setSeconds] = useState(550);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds((seconds) => seconds - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (seconds <= 0 || guesses <= 1) {\n    setTimeout(() => {\n      history.push(\"/lost\");\n    }, 500);\n  }\n\n  if (!dashes.includes(\"-\")) {\n    setTimeout(() => {\n      history.push(\"/won\");\n    }, 500);\n  }\n\n  return (\n    <div className=\"container\">\n      <audio id=\"CorrectAudio\">\n        <source src={correctSound} />\n      </audio>\n      <audio id=\"IncorrectAudio\">\n        <source src={incorrectSound} />\n      </audio>\n      <div className=\"title\">\n        <p className=\"nameGameB\">H</p> <p className=\"nameGameR\">A</p>{\" \"}\n        <p className=\"nameGameB\">NGM</p>\n        <p className=\"nameGameR\">A</p> <p className=\"nameGameB\">N</p>\n      </div>\n      <div className=\"homePlay \">\n        <div className=\"play\">\n          <h4>Guesses left: {guesses - 1}</h4>\n          <h4>Time: {seconds}</h4>\n        </div>\n        <div class=\"row\">\n          <div className=\"letters\">\n            {letters.map((letter, index) => {\n              return (\n                <>\n                  <button\n                    className=\"letter\"\n                    id={`${index}`}\n                    onClick={() => letterPressed(index)}\n                  >\n                    {letter}\n                  </button>\n                </>\n              );\n            })}\n          </div>\n          <div className=\"container2\">\n            <h4 className=\"guess\">{dashes}</h4>\n            <img src={amges[picIndex]} className=\"imagegg\" alt=\"hangman\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}